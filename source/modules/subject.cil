(boolean mmap_low_allowed false)

(typeattribute is_subject)
(typeattribute is_common_subject)

(typeattribute can_mmap_low)
(typeattribute can_set_current_context)

(typeattribute
    all_except_is_subject)
(typeattribute all_subjects_except_subjects_associated_with_can_mmap_low)
(typeattribute
    all_subjects_except_subjects_associated_with_can_set_current_context)

(typeattribute can_change_subject_identity)
(typeattribute can_change_subject_role)
(typeattribute can_change_object_identity)
(typeattribute can_system_change)
(typeattribute is_user_target_subject)
(typeattribute is_uncond_exempt_subject)

(typeattribute is_entry_file_object)

(typeattribute
    not_associated_with_is_subject_or_invalid)

(typeattribute is_any)

(typeattribute has_unconfined_access_to_subject_assets)

(typeattributeset all_except_is_subject (not
    is_subject))

(neverallow is_subject
    all_except_is_subject (process (transition
        dyntransition)))

(typeattributeset
    all_subjects_except_subjects_associated_with_can_set_current_context
        (xor is_subject can_set_current_context))

(neverallow all_subjects_except_subjects_associated_with_can_set_current_context
    self (process (setcurrent)))

(typeattributeset all_subjects_except_subjects_associated_with_can_mmap_low
    (xor is_subject can_mmap_low))

(neverallow all_subjects_except_subjects_associated_with_can_mmap_low self
    (memprotect (mmap_zero)))

(call object_roletype (is_subject))

(type mmap_low_allowed_t)
(call selinux_boolean_object (mmap_low_allowed_t))

(context mmap_low_allowed (system_u object_r
    mmap_low_allowed_t ((s0) (s0))))
(genfscon "selinuxfs" "/booleans/mmap_low_allowed"
    mmap_low_allowed)

(typeattributeset
    not_associated_with_is_subject_or_invalid (not
        (is_subject invalid_t)))

(neverallow is_subject
    not_associated_with_is_subject_or_invalid
        (process (all)))
(neverallow invalid_t
    not_associated_with_is_subject_or_invalid
        (process (all)))

(typeattributeset is_any (all))

(neverallow not_associated_with_is_subject_or_invalid
    is_any (process (all)))

(allow is_common_subject self (process (fork sigchld)))

(allow is_common_subject self (dirs (list)))
(allow is_common_subject self rw_file_perms)

(call commands_search_bin (is_common_subject))
(call files_search_root (is_common_subject))
(call system_search_proc (is_common_subject))

(call devices_rw_null (is_common_subject))
(call devices_rw_zero (is_common_subject))

(call terminal_use_controlling_terminal (is_common_subject))

(optional subject_optional_libraries
    (call libraries_use_ld_so (is_common_subject))
    (call libraries_use_shared_libs (is_common_subject)))

(optional subject_optional_systemd
    (call systemd_send_sigchld (is_common_subject)))

(allow has_unconfined_access_to_subject_assets is_subject (dccp_socket
    (all)))
(allow has_unconfined_access_to_subject_assets is_subject (tcp_socket
    (all)))
(allow has_unconfined_access_to_subject_assets is_subject (udp_socket
    (all)))
(allow has_unconfined_access_to_subject_assets is_subject (rawip_socket
    (all)))

(allow has_unconfined_access_to_subject_assets is_subject (key (all)))
(allow has_unconfined_access_to_subject_assets is_subject (socket
    (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (unix_stream_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (unix_dgram_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (appletalk_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject (tun_socket
    (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (packet_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_selinux_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_nflog_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_dnrt_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_kobject_uevent_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_route_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_firewall_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_tcpdiag_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_xfrm_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_audit_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (netlink_ip6fw_socket (all)))
(allow has_unconfined_access_to_subject_assets is_subject
    (socket (all)))

(allow has_unconfined_access_to_subject_assets is_subject
    all_process_perms_except_transition_dyntransition_setcurrent_ptrace_setsched_execmem_execstack_and_execheap)
(allow has_unconfined_access_to_subject_assets is_subject (fd (all)))
(allow has_unconfined_access_to_subject_assets is_subject (key (all)))

(allow has_unconfined_access_to_subject_assets is_subject (dirs (list)))
(allow has_unconfined_access_to_subject_assets is_subject
    rw_file_perms)
(allow has_unconfined_access_to_subject_assets is_subject
    rw_fifo_file_perms)

(allow has_unconfined_access_to_subject_assets is_subject (ipc (all)))
(allow has_unconfined_access_to_subject_assets is_subject (msgq (all)))
(allow has_unconfined_access_to_subject_assets is_subject (sem (all)))
(allow has_unconfined_access_to_subject_assets is_subject (shm (all)))
(allow has_unconfined_access_to_subject_assets is_subject (msg (all)))

(macro subject_base_subject ((type ARG1))
    (typeattributeset is_subject ARG1))

(macro subject_common_subject ((type ARG1))
    (call subject_base_subject (ARG1))
    (typeattributeset is_common_subject ARG1))

(macro subject_dynamic_type_transition_subject ((type ARG1))
    (typeattributeset can_set_current_context ARG1))

(macro subject_entry ((type ARG1)(type ARG2))
    (allow ARG1 ARG2 (file (entrypoint)))
    (allow ARG1 ARG2 mmap_file_perms)
    (call subject_entry_object (ARG2))
    (call commands_bin_object (ARG2)))

(macro subject_entry_object ((type ARG1))
    (typeattributeset is_entry_file_object ARG1))

(macro subject_system_change_exemption ((type ARG1))
    (typeattributeset can_system_change ARG1))

(macro subject_subj_id_change_exemption ((type ARG1))
    (typeattributeset can_change_subject_identity ARG1))

(macro subject_role_change_exemption ((type ARG1))
    (typeattributeset can_change_subject_role ARG1))

(macro subject_obj_id_change_exemption ((type ARG1))
    (typeattributeset can_change_object_identity ARG1))

(macro subject_user_exemption_target ((type ARG1))
    (typeattributeset is_user_target_subject ARG1))

(macro subject_mmap_low ((type ARG1))
    (typeattributeset can_mmap_low ARG1)
    (booleanif mmap_low_allowed
        (true
            (allow ARG1 self (memprotect (mmap_zero))))))

(macro subject_mmap_low_uncond ((type ARG1))
    (typeattributeset can_mmap_low ARG1)
    (allow ARG1 self (memprotect (mmap_zero))))

(macro subject_getpgid_all_subjects ((type ARG1))
    (allow ARG1 is_subject (process (getpgid))))

(macro subject_read_all_subjects_state ((type ARG1))
    (allow ARG1 is_subject (dirs (list)))
    (allow ARG1 is_subject read_file_perms))

(macro subject_sigkill_all_subjects ((type ARG1))
    (allow ARG1 is_subject (process (sigkill))))

(macro subject_signal_all_subjects ((type ARG1))
    (allow ARG1 is_subject (process (signal))))

(macro subject_signull_all_subjects ((type ARG1))
    (allow ARG1 is_subject (process (signull))))

(macro subject_sigstop_all_subjects ((type ARG1))
    (allow ARG1 is_subject (process (sigstop))))

(macro subject_unconfined ((type ARG1))
    (call subject_mmap_low (ARG1))
    (typeattributeset can_change_object_identity ARG1)
    (typeattributeset can_set_current_context ARG1)
    (typeattributeset has_unconfined_access_to_subject_assets ARG1)
    (typeattributeset is_uncond_exempt_subject ARG1))
